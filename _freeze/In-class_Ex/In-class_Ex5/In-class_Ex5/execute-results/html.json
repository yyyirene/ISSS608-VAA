{
  "hash": "7d7b8eadeb9b441f062506a794c3f295",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In class Exercise 5\"\ndate: \"May 17 2025\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: FALSE\n---\n\n\n\n[Jsonlite](https://cran.r-project.org/web/packages/jsonlite/jsonlite.pdf)\n\nWe will transform the json data into table format\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidygraph, ggraph, \n               tidyverse, graphlayouts, \n               concaveman, ggforce,SmartEDA,jsonlite)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkg <- fromJSON(\"data/MC1_graph.json\")\n```\n:::\n\n\n\nInspect structure\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(kg,max.level=1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame':\t17412 obs. of  10 variables:\n $ links     :'data.frame':\t37857 obs. of  4 variables:\n```\n\n\n:::\n:::\n\n\n\nExtract and Inspect\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnodes_tbl<-as_tibble(kg$nodes)\nedges_tbl<-as_tibble(kg$links)\n```\n:::\n\n\n\nNode type will change to node.type\n\nInitial EDA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = edges_tbl,aes(y=`Edge Type`))+\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = nodes_tbl,aes(y=`Node Type`))+\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nstep 1:Mapping from node id to row index\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid_map <- tibble(id=nodes_tbl$id,\n                 index = seq_len(\n                   nrow(nodes_tbl)\n                 ))\n```\n:::\n\n\n\nThis ensure each id from your node list is mapped to the correct row number.\n\nstep 2:Map source and target IDS to row indices\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_tbl <- edges_tbl %>%\n  left_join(id_map, by = c(\"source\" = \"id\")) %>%\n  rename(from = index ) %>% \n  left_join(id_map, by = c (\"target\"= \"id\")) %>% \n  rename(to = index )\n```\n:::\n\n\n\nstep 3 ：filter out any unmatched (invalid) edges\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nedges_tbl<-edges_tbl %>% \n  filter(!is.na(from), !is.na(to))\n```\n:::\n\n\n\nstep 4:creating the graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph <- tbl_graph( nodes = nodes_tbl,\n                    edges = edges_tbl,\n                    directed = kg$directed)\ngraph\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tbl_graph: 17412 nodes and 37857 edges\n#\n# A directed multigraph with 16 components\n#\n# Node Data: 17,412 × 10 (active)\n   `Node Type` name         single release_date genre notable    id written_date\n   <chr>       <chr>        <lgl>  <chr>        <chr> <lgl>   <int> <chr>       \n 1 Song        Breaking Th… TRUE   2017         Ocea… TRUE        0 <NA>        \n 2 Person      Carlos Duffy NA     <NA>         <NA>  NA          1 <NA>        \n 3 Person      Min Qin      NA     <NA>         <NA>  NA          2 <NA>        \n 4 Person      Xiuying Xie  NA     <NA>         <NA>  NA          3 <NA>        \n 5 RecordLabel Nautical Mi… NA     <NA>         <NA>  NA          4 <NA>        \n 6 Song        Unshackled … FALSE  2026         Lo-F… TRUE        5 <NA>        \n 7 Person      Luke Payne   NA     <NA>         <NA>  NA          6 <NA>        \n 8 Person      Xiulan Zeng  NA     <NA>         <NA>  NA          7 <NA>        \n 9 Person      David Frank… NA     <NA>         <NA>  NA          8 <NA>        \n10 RecordLabel Colline-Cas… NA     <NA>         <NA>  NA          9 <NA>        \n# ℹ 17,402 more rows\n# ℹ 2 more variables: stage_name <chr>, notoriety_date <chr>\n#\n# Edge Data: 37,857 × 6\n   from    to `Edge Type`      source target   key\n  <int> <int> <chr>             <int>  <int> <int>\n1     1  1842 InterpolatesFrom      0   1841     0\n2     1     5 RecordedBy            0      4     0\n3     2     1 PerformerOf           1      0     0\n# ℹ 37,854 more rows\n```\n\n\n:::\n:::\n\n\n\nHere is truth\n\nVisualising the knowledge graph\n\nOnce have this ,will get back the same graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(graph,layout= \"fr\") +\n  geom_edge_link(alpha = 0.3,\n                 colour =\"gray\") +\n  geom_node_point(aes(color = `Node Type`),\n                  size = 4) +\n   geom_node_text(aes(label = name),\n                  repel = TRUE,\n                  size = 2.5) +\n    theme_void()\n```\n:::\n\n\n\nit is not usual to visual\n\nStep 1 : Filter edges to only \"Memberor\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph_memberof <- graph %>%\n  activate(edges) %>%\n  filter(`Edge Type`== \"MemberOf\")\n```\n:::\n\n\n\nno link but still here\n\nStep 2 ：Extract only connected nodes\n\n(i,e., used in the these edges)\n\ndelete the often nodes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuesed_node_indices <- graph_memberof %>%\n  activate(edges) %>%\n  as_tibble() %>%\n  select(from , to )  %>%\n  unlist () %>%\n  unique()\n```\n:::\n\n\n\nStep 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph_memberof <-  graph_memberof %>%\n  activate(nodes) %>%\n  mutate(row_id = row_number()) %>%\n  filter(row_id %in% uesed_node_indices) %>%\n  select(-row_id)\n```\n:::\n\n\n\nneed time to invest\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(graph_memberof, layout = \"fr\") +\n  geom_edge_link(alpha = 0.5, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), \n                  size = 1) +\n  geom_node_text(aes(label = name), \n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex5_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}